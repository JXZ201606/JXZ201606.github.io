<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>jxzの博客</title>
  
  <subtitle>前路漫漫，当克己，当慎独。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-04-23T07:51:34.038Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>JixuZhao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>git的复习</title>
    <link href="http://yoursite.com/2019/04/23/git%E7%9A%84%E5%A4%8D%E4%B9%A0/"/>
    <id>http://yoursite.com/2019/04/23/git的复习/</id>
    <published>2019-04-23T06:43:43.000Z</published>
    <updated>2019-04-23T07:51:34.038Z</updated>
    
    <content type="html"><![CDATA[<p>好早之前学习过git，有些命令不怎么用，在这里做一个复习，也做个记录。</p><p>推荐查看学习廖雪峰的git教程<a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000</a></p><h2 id="git的简介"><a href="#git的简介" class="headerlink" title="git的简介"></a>git的简介</h2><p>Git是什么？</p><p>Git是目前世界上最先进的分布式版本控制系统（没有之一）。</p><p>Git有什么特点？简单来说就是：高端大气上档次！</p><p>那什么是版本控制系统？</p><p>如果你用Microsoft Word写过长篇大论，那你一定有这样的经历：</p><p>想删除一个段落，又怕将来想恢复找不回来怎么办？有办法，先把当前文件“另存为……”一个新的Word文件，再接着改，改到一定程度，再“另存为……”一个新文件，这样一直改下去，最后你的Word文档变成了这样：</p><p><img src="https://cdn.liaoxuefeng.com/cdn/files/attachments/0013848606651673ff1c83932d249118bf8fd5c58c15ca2000/0" alt></p><p>过了一周，你想找回被删除的文字，但是已经记不清删除前保存在哪个文件里了，只好一个一个文件去找，真麻烦。</p><p>看着一堆乱七八糟的文件，想保留最新的一个，然后把其他的删掉，又怕哪天会用上，还不敢删，真郁闷。</p><p>更要命的是，有些部分需要你的财务同事帮助填写，于是你把文件Copy到U盘里给她（也可能通过Email发送一份给她），然后，你继续修改Word文件。一天后，同事再把Word文件传给你，此时，你必须想想，发给她之后到你收到她的文件期间，你作了哪些改动，得把你的改动和她的部分合并，真困难。</p><p>于是你想，如果有一个软件，不但能自动帮我记录每次文件的改动，还可以让同事协作编辑，这样就不用自己管理一堆类似的文件了，也不需要把文件传来传去。如果想查看某次改动，只需要在软件里瞄一眼就可以，岂不是很方便？</p><p>这个软件用起来就应该像这个样子，能记录每次文件的改动：<br><img src="/images/git1.png" alt="git1"></p><p>这样，你就结束了手动管理多个“版本”的史前时代，进入到版本控制的20世纪。</p><h2 id="git的安装"><a href="#git的安装" class="headerlink" title="git的安装"></a>git的安装</h2><p>在Windows上安装Git（其他系统自行百度)</p><p>在Windows上使用Git，可以从Git官网直接<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">下载安装程序</a>，（网速慢的同学请移步<a href="https://pan.baidu.com/s/1kU5OCOB#list/path=%2Fpub%2Fgit" target="_blank" rel="noopener">国内镜像</a>），然后按默认选项安装即可。<br><img src="https://cdn.liaoxuefeng.com/cdn/files/attachments/001384907073134ef6feff559cf4ce3a2c5c588d2831c0a000/0" alt></p><p>安装完成后，在开始菜单里找到“Git”-&gt;“Git Bash”，蹦出一个类似命令行窗口的东西，就说明Git安装成功！</p><p>安装完成后，还需要最后一步设置，在命令行输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;Your Name&quot;</span><br><span class="line"></span><br><span class="line">$ git config --global user.email &quot;email@example.com&quot;</span><br></pre></td></tr></table></figure><p>因为Git是分布式版本控制系统，所以，每个机器都必须自报家门：你的名字和Email地址。你也许会担心，如果有人故意冒充别人怎么办？这个不必担心，首先我们相信大家都是善良无知的群众，其次，真的有冒充的也是有办法可查的。</p><p>注意<font color="#FF0000"> <strong><em>git config</em></strong></font>命令的<font color="#FF0000"><strong><em>–global</em></strong></font>参数，用了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，当然也可以对某个仓库指定不同的用户名和Email地址。</p><h2 id="创建版本库"><a href="#创建版本库" class="headerlink" title="创建版本库"></a>创建版本库</h2><p>什么是版本库呢？版本库又名仓库，英文名<strong>repository</strong>，你可以简单理解成一个目录，这个目录里面的所有文件都可以被Git管理起来，每个文件的修改、删除，Git都能跟踪，以便任何时刻都可以追踪历史，或者在将来某个时刻可以“还原”。</p><p>所以，创建一个版本库非常简单，首先，选择一个合适的地方，创建一个空目录：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir learngit</span><br><span class="line">$ cd learngit</span><br><span class="line">$ pwd</span><br><span class="line">/Users/michael/learngit</span><br></pre></td></tr></table></figure></p><font color="#FF0000">pwd</font>命令用于显示当前目录。在我的Mac上，这个仓库位于/Users/michael/learngit。<br><br> <font color="#FF0000">如果你使用Windows系统，为了避免遇到各种莫名其妙的问题，请确保目录名（包括父目录）不包含中文</font><p>第二步，通过git init命令把这个目录变成Git可以管理的仓库：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git init</span><br><span class="line">Initialized empty Git repository in /Users/michael/learngit/.git/</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;好早之前学习过git，有些命令不怎么用，在这里做一个复习，也做个记录。&lt;/p&gt;
&lt;p&gt;推荐查看学习廖雪峰的git教程&lt;a href=&quot;https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8
      
    
    </summary>
    
      <category term="Git" scheme="http://yoursite.com/categories/Git/"/>
    
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
      <category term="github" scheme="http://yoursite.com/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>markdown的基本语法</title>
    <link href="http://yoursite.com/2019/04/23/markdown%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
    <id>http://yoursite.com/2019/04/23/markdown的基本语法/</id>
    <published>2019-04-23T03:16:28.000Z</published>
    <updated>2019-04-23T06:34:52.559Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MarkDown-的基本语法"><a href="#MarkDown-的基本语法" class="headerlink" title="MarkDown 的基本语法"></a>MarkDown 的基本语法</h2><p>参考：<a href="https://www.jianshu.com/p/191d1e21f7ed" target="_blank" rel="noopener">https://www.jianshu.com/p/191d1e21f7ed</a><br>（主要是为了写博客）</p><h3 id="一丶标题"><a href="#一丶标题" class="headerlink" title="一丶标题"></a>一丶标题</h3><p>在想要设置为标题的文字前面加#来表示<br>一个#是一级标题，二个#是二级标题，以此类推。支持六级标题。</p><p>注：标准语法一般在#后跟个空格再写文字。</p><p>示例：<img src="/images/bt.png" alt="标题示例"></p><p>效果如下：</p><h1 id="这是一级标题"><a href="#这是一级标题" class="headerlink" title="这是一级标题"></a>这是一级标题</h1><h2 id="这是二级标题"><a href="#这是二级标题" class="headerlink" title="这是二级标题"></a>这是二级标题</h2><h3 id="这是三级标题"><a href="#这是三级标题" class="headerlink" title="这是三级标题"></a>这是三级标题</h3><h4 id="这是四级标题"><a href="#这是四级标题" class="headerlink" title="这是四级标题"></a>这是四级标题</h4><h5 id="这是五级标题"><a href="#这是五级标题" class="headerlink" title="这是五级标题"></a>这是五级标题</h5><h6 id="这是六级标题"><a href="#这是六级标题" class="headerlink" title="这是六级标题"></a>这是六级标题</h6><h3 id="二丶字体"><a href="#二丶字体" class="headerlink" title="二丶字体"></a>二丶字体</h3><ul><li>加粗</li></ul><p>要加粗的文字左右分别用两个*号包起来</p><ul><li>斜体</li></ul><p>要倾斜的文字左右分别用一个*号包起来</p><ul><li>斜体加粗</li></ul><p>要倾斜和加粗的文字左右分别用三个*号包起来</p><ul><li>删除线</li></ul><p>要加删除线的文字左右分别用两个~~号包起来</p><p>示例：<img src="/images/zt.png" alt="字体示例"></p><p>效果如下：</p><p><strong>这是加粗的文字</strong></p><p><em>这是倾斜的文字</em>`</p><p><strong><em>这是斜体加粗的文字</em></strong></p><p><del>这是加删除线的文字</del></p><h3 id="三丶引用"><a href="#三丶引用" class="headerlink" title="三丶引用"></a>三丶引用</h3><p>在引用的文字前加&gt;即可。引用也可以嵌套，如加两个&gt;&gt;三个&gt;&gt;&gt;<br>n个…<br>貌似可以一直加下去，但没神马卵用</p><p>示例：<img src="/images/yy.png" alt="引用示例"></p><p>展示效果：</p><blockquote><p>这是引用的内容</p><blockquote><p>这是引用的内容</p><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><p>这是引用的内容</p></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote><h3 id="四丶分割线"><a href="#四丶分割线" class="headerlink" title="四丶分割线"></a>四丶分割线</h3><p>三个或者三个以上的 - 或者 * 都可以。</p><p>示例：<img src="/images/fg.png" alt="分割线示例"></p><p>展示效果：</p><hr><hr><hr><hr><h3 id="五丶图片"><a href="#五丶图片" class="headerlink" title="五丶图片"></a>五丶图片</h3><p>语法：<br><code>![图片alt](图片地址 &#39;&#39;图片title&#39;&#39;)</code></p><p>图片alt就是显示在图片下面的文字，相当于对图片内容的解释。<br>图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加</p><h3 id="六丶超链接"><a href="#六丶超链接" class="headerlink" title="六丶超链接"></a>六丶超链接</h3><p>语法：<br><code>[超链接名](超链接地址 &quot;超链接title&quot;)</code></p><p>超链接title可以不加</p><h3 id="七丶列表"><a href="#七丶列表" class="headerlink" title="七丶列表"></a>七丶列表</h3><h4 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h4><p>语法：<br>无序列表用 - + * 任何一种都可以</p><p>示例：<img src="/images/wx.png" alt="无序示例"></p><p>展示效果：</p><ul><li>列表内容</li></ul><ul><li>列表内容</li></ul><ul><li>列表内容</li></ul><p>注意：- + * 跟内容之间都要有一个空格`</p><h4 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h4><p>语法：<br>数字加点</p><p>示例：</p><p>1.列表内容</p><p>2.列表内容</p><p>3.列表内容</p><p>注意：序号跟内容之间要有空格</p><h4 id="列表嵌套"><a href="#列表嵌套" class="headerlink" title="列表嵌套"></a>列表嵌套</h4><p> 上一级和下一级之间敲三个空格即可 </p><h3 id="八-丶表格"><a href="#八-丶表格" class="headerlink" title="八 丶表格"></a>八 丶表格</h3><p>语法：</p><pre><code>表头|表头|表头---|:--:|---:内容|内容|内容内容|内容|内容</code></pre><p>`</p><p>第二行分割表头和内容。</p><ul><li><p>有一个就行，为了对齐，多加了几个<br>文字默认居左<br>-两边加：表示文字居中<br>-右边加：表示文字居右<br>注：原生的语法两边都要用 | 包起来。此处省略</p><h3 id="九丶代码"><a href="#九丶代码" class="headerlink" title="九丶代码"></a>九丶代码</h3><p>语法：<br>单行代码：代码之间分别用一个反引号包起来</p><p>  <code>代码内容</code><br>代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行</p><h3 id="十丶流程图"><a href="#十丶流程图" class="headerlink" title="十丶流程图"></a>十丶流程图</h3></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">st=&gt;start: 开始</span><br><span class="line"></span><br><span class="line">op=&gt;operation: My Operation</span><br><span class="line"></span><br><span class="line">cond=&gt;condition: Yes or No?</span><br><span class="line"></span><br><span class="line">e=&gt;end</span><br><span class="line"></span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line"></span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line"></span><br><span class="line">cond(no)-&gt;op</span><br><span class="line"></span><br><span class="line">&amp;</span><br></pre></td></tr></table></figure><p>效果：<img src="/images/lc.png" alt="流程图示例"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;MarkDown-的基本语法&quot;&gt;&lt;a href=&quot;#MarkDown-的基本语法&quot; class=&quot;headerlink&quot; title=&quot;MarkDown 的基本语法&quot;&gt;&lt;/a&gt;MarkDown 的基本语法&lt;/h2&gt;&lt;p&gt;参考：&lt;a href=&quot;https://ww
      
    
    </summary>
    
      <category term="markdown" scheme="http://yoursite.com/categories/markdown/"/>
    
    
      <category term="markdown" scheme="http://yoursite.com/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>我的第一篇博客</title>
    <link href="http://yoursite.com/2019/04/21/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2019/04/21/我的第一篇博客/</id>
    <published>2019-04-21T14:19:54.000Z</published>
    <updated>2019-04-21T15:06:34.431Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一篇博客"><a href="#第一篇博客" class="headerlink" title="第一篇博客"></a>第一篇博客</h1><p>  捣鼓了一天博客，因为不太懂前端的一些知识，所以捣鼓的并不是很顺利。所幸网上的教程还比较多，现在勉强有个博客的样子。现在博客这个主题优化的还不是很好，网上看到了很多优化非常漂亮的模板，以后会模仿下，希望以后能够坚持写下去。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;第一篇博客&quot;&gt;&lt;a href=&quot;#第一篇博客&quot; class=&quot;headerlink&quot; title=&quot;第一篇博客&quot;&gt;&lt;/a&gt;第一篇博客&lt;/h1&gt;&lt;p&gt;  捣鼓了一天博客，因为不太懂前端的一些知识，所以捣鼓的并不是很顺利。所幸网上的教程还比较多，现在勉强有个博客的样子
      
    
    </summary>
    
      <category term="搭建博客" scheme="http://yoursite.com/categories/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="blog" scheme="http://yoursite.com/tags/blog/"/>
    
      <category term="nodejs" scheme="http://yoursite.com/tags/nodejs/"/>
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
</feed>
